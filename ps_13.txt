--
-- PostgreSQL database dump
--

-- Dumped from database version 9.6.5
-- Dumped by pg_dump version 9.6.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- Name: role; Type: TYPE; Schema: public; Owner: ps_13
--

CREATE TYPE role AS ENUM (
    'MODERATOR',
    'USER'
);


ALTER TYPE role OWNER TO ps_13;

--
-- Name: default_userrole(); Type: FUNCTION; Schema: public; Owner: ps_13
--

CREATE FUNCTION default_userrole() RETURNS trigger
    LANGUAGE plpgsql
    AS $$ BEGIN IF (TG_OP = 'INSERT') THEN  INSERT INTO userroles VALUES (NEW.username, DEFAULT); RETURN NEW; END IF; RETURN NULL; END; $$;


ALTER FUNCTION public.default_userrole() OWNER TO ps_13;

--
-- Name: new_user_profile(); Type: FUNCTION; Schema: public; Owner: ps_13
--

CREATE FUNCTION new_user_profile() RETURNS integer
    LANGUAGE plpgsql
    AS $$ DECLARE prof_id integer; BEGIN INSERT INTO profile VALUES (DEFAULT, '', '', '', DEFAULT, '', DEFAULT, DEFAULT) RETURNING id INTO prof_id; RETURN prof_id; END; $$;


ALTER FUNCTION public.new_user_profile() OWNER TO ps_13;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: profile; Type: TABLE; Schema: public; Owner: ps_13
--

CREATE TABLE profile (
    id integer NOT NULL,
    avatar text,
    name character varying(20),
    surname character varying(20),
    rating integer DEFAULT 0,
    about_self text,
    reg_date date DEFAULT ('now'::text)::date,
    rewards integer NOT NULL,
    CONSTRAINT min_rating CHECK ((rating >= 0))
);


ALTER TABLE profile OWNER TO ps_13;

--
-- Name: profile_id_seq; Type: SEQUENCE; Schema: public; Owner: ps_13
--

CREATE SEQUENCE profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE profile_id_seq OWNER TO ps_13;

--
-- Name: profile_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ps_13
--

ALTER SEQUENCE profile_id_seq OWNED BY profile.id;


--
-- Name: profile_rewards_seq; Type: SEQUENCE; Schema: public; Owner: ps_13
--

CREATE SEQUENCE profile_rewards_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE profile_rewards_seq OWNER TO ps_13;

--
-- Name: profile_rewards_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ps_13
--

ALTER SEQUENCE profile_rewards_seq OWNED BY profile.rewards;


--
-- Name: rewards; Type: TABLE; Schema: public; Owner: ps_13
--

CREATE TABLE rewards (
    id integer NOT NULL,
    name character varying(40) NOT NULL
);


ALTER TABLE rewards OWNER TO ps_13;

--
-- Name: rewards_id_seq; Type: SEQUENCE; Schema: public; Owner: ps_13
--

CREATE SEQUENCE rewards_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE rewards_id_seq OWNER TO ps_13;

--
-- Name: rewards_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ps_13
--

ALTER SEQUENCE rewards_id_seq OWNED BY rewards.id;


--
-- Name: user_profile_to_rewards; Type: TABLE; Schema: public; Owner: ps_13
--

CREATE TABLE user_profile_to_rewards (
    profile_id bigint,
    reward_id bigint
);


ALTER TABLE user_profile_to_rewards OWNER TO ps_13;

--
-- Name: userroles; Type: TABLE; Schema: public; Owner: ps_13
--

CREATE TABLE userroles (
    username character varying(16) NOT NULL,
    role role DEFAULT 'USER'::role
);


ALTER TABLE userroles OWNER TO ps_13;

--
-- Name: users; Type: TABLE; Schema: public; Owner: ps_13
--

CREATE TABLE users (
    id integer NOT NULL,
    username character varying(16) NOT NULL,
    password character varying(50) NOT NULL,
    profile bigint DEFAULT new_user_profile() NOT NULL,
    email character varying(25) NOT NULL,
    uuid character varying(50) DEFAULT 0
);


ALTER TABLE users OWNER TO ps_13;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: ps_13
--

CREATE SEQUENCE users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE users_id_seq OWNER TO ps_13;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: ps_13
--

ALTER SEQUENCE users_id_seq OWNED BY users.id;


--
-- Name: profile id; Type: DEFAULT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY profile ALTER COLUMN id SET DEFAULT nextval('profile_id_seq'::regclass);


--
-- Name: profile rewards; Type: DEFAULT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY profile ALTER COLUMN rewards SET DEFAULT nextval('profile_rewards_seq'::regclass);


--
-- Name: rewards id; Type: DEFAULT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY rewards ALTER COLUMN id SET DEFAULT nextval('rewards_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users ALTER COLUMN id SET DEFAULT nextval('users_id_seq'::regclass);


--
-- Data for Name: profile; Type: TABLE DATA; Schema: public; Owner: ps_13
--

COPY profile (id, avatar, name, surname, rating, about_self, reg_date, rewards) FROM stdin;
88		Roman	Bagautdinov	56		2017-11-27	41
\.


--
-- Name: profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ps_13
--

SELECT pg_catalog.setval('profile_id_seq', 88, true);


--
-- Name: profile_rewards_seq; Type: SEQUENCE SET; Schema: public; Owner: ps_13
--

SELECT pg_catalog.setval('profile_rewards_seq', 41, true);


--
-- Data for Name: rewards; Type: TABLE DATA; Schema: public; Owner: ps_13
--

COPY rewards (id, name) FROM stdin;
\.


--
-- Name: rewards_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ps_13
--

SELECT pg_catalog.setval('rewards_id_seq', 1, false);


--
-- Data for Name: user_profile_to_rewards; Type: TABLE DATA; Schema: public; Owner: ps_13
--

COPY user_profile_to_rewards (profile_id, reward_id) FROM stdin;
\.


--
-- Data for Name: userroles; Type: TABLE DATA; Schema: public; Owner: ps_13
--

COPY userroles (username, role) FROM stdin;
D0ct0r_Zl0	USER
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: ps_13
--

COPY users (id, username, password, profile, email, uuid) FROM stdin;
56	D0ct0r_Zl0	6735af9e0955dfc274ec006f68c6803a	88	doctorzlo1177@gmail.com	c04ff87e-3c68-44f6-9bb9-2e7af6181202
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: ps_13
--

SELECT pg_catalog.setval('users_id_seq', 56, true);


--
-- Name: users email_unique; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users
    ADD CONSTRAINT email_unique UNIQUE (email);


--
-- Name: profile profile_pk; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY profile
    ADD CONSTRAINT profile_pk PRIMARY KEY (id);


--
-- Name: rewards reward_unique; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY rewards
    ADD CONSTRAINT reward_unique UNIQUE (name);


--
-- Name: rewards rewards_pk; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY rewards
    ADD CONSTRAINT rewards_pk PRIMARY KEY (id);


--
-- Name: users unique_id; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users
    ADD CONSTRAINT unique_id UNIQUE (id);


--
-- Name: users unique_uuid; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users
    ADD CONSTRAINT unique_uuid UNIQUE (uuid);


--
-- Name: users username_length; Type: CHECK CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE users
    ADD CONSTRAINT username_length CHECK (((char_length((username)::text) > 3) AND (char_length((username)::text) < 17))) NOT VALID;


--
-- Name: users username_unique; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users
    ADD CONSTRAINT username_unique UNIQUE (username);


--
-- Name: userroles userroles_pkey; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY userroles
    ADD CONSTRAINT userroles_pkey PRIMARY KEY (username);


--
-- Name: users users_pk; Type: CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pk PRIMARY KEY (username);


--
-- Name: users set_default_userrole; Type: TRIGGER; Schema: public; Owner: ps_13
--

CREATE TRIGGER set_default_userrole AFTER INSERT ON users FOR EACH ROW EXECUTE PROCEDURE default_userrole();


--
-- Name: user_profile_to_rewards profile_fk; Type: FK CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY user_profile_to_rewards
    ADD CONSTRAINT profile_fk FOREIGN KEY (profile_id) REFERENCES profile(id);


--
-- Name: user_profile_to_rewards reward_fk; Type: FK CONSTRAINT; Schema: public; Owner: ps_13
--

ALTER TABLE ONLY user_profile_to_rewards
    ADD CONSTRAINT reward_fk FOREIGN KEY (reward_id) REFERENCES rewards(id);


--
-- PostgreSQL database dump complete
--

